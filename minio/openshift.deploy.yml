kind: Template
apiVersion: template.openshift.io/v1
parameters:
  - name: REPO
    description: Repository name
    value: nr-gwells
  - name: COMPONENT
    description: Component name
    value: minio
  - name: ZONE
    description: Deployment zone, e.g. pr-### or prod
    required: true
  - name: TAG
    required: true
  - name: DEST_PVC_SIZE
    displayName: "PVC size"
    value: "1Gi"
  - name: DEST_PVC_CLASS
    displayName: "PVC class"
    value: "netapp-file-standard"
  - name: DEST_PVC_ACCESS
    displayName: "PVC access mode"
    value: "ReadWriteMany"
objects:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      finalizers:
        - kubernetes.io/pvc-protection
      name: ${REPO}-${ZONE}-${COMPONENT}
      labels:
        app: ${REPO}-${ZONE}
        name: ${REPO}-${ZONE}-${COMPONENT}
    spec:
      accessModes:
        - ${DEST_PVC_ACCESS}
      resources:
        requests:
          storage: ${DEST_PVC_SIZE}
      storageClassName: ${DEST_PVC_CLASS}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: ${REPO}-${ZONE}
        name: ${REPO}-${ZONE}-${COMPONENT}
      name: ${REPO}-${ZONE}-${COMPONENT}
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: ${REPO}-${ZONE}
      strategy:
        activeDeadlineSeconds: 3000
        recreateParams:
          timeoutSeconds: 600
        type: Recreate
      template:
        metadata:
          labels:
            app: ${REPO}-${ZONE}
            name: ${REPO}-${ZONE}-${COMPONENT}
            service: ${REPO}-${ZONE}-${COMPONENT}
        spec:
          containers:
          - env:
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: ${REPO}-${ZONE}-${COMPONENT}
                  key: MINIO_ACCESS_KEY
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: ${REPO}-${ZONE}-${COMPONENT}
                  key: MINIO_SECRET_KEY
            - name: MINIO_DATA_DIR
              value: /opt/minio/s3/data
            image: ghcr.io/bcgov/${REPO}/${COMPONENT}:${TAG}
            securityContext:
              capabilities:
                add: ["NET_BIND_SERVICE"]
            # readinessProbe:
            #   httpGet:
            #     path: /minio/health
            #     port: 9000
            #     scheme: HTTP
            #   initialDelaySeconds: 15
            #   timeoutSeconds: 10
            #   periodSeconds: 20
            #   successThreshold: 1
            #   failureThreshold: 30
            # imagePullPolicy: Always
            name: ${REPO}-${ZONE}-${COMPONENT}
            command:
              - '/bin/sh'
              - '-c'
            args:
              - '/minio-entrypoint.sh server /opt/minio/s3/data'
            ports:
            - containerPort: 9000
              protocol: TCP
            resources:
              limits:
                cpu: 250m
              requests:
                cpu: 100m
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /opt/minio/s3/data
              name: minio-vol
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          volumes:
          - name: minio-vol
            persistentVolumeClaim:
              claimName: ${REPO}-${ZONE}-${COMPONENT}
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${REPO}-${ZONE}
        name: ${REPO}-${ZONE}-${COMPONENT}
      name: ${REPO}-${ZONE}-${COMPONENT}
    spec:
      selector:
        app: ${REPO}-${ZONE}
        name: ${REPO}-${ZONE}-${COMPONENT}
        service: ${REPO}-${ZONE}-${COMPONENT}
      ports:
      - name: 9000-tcp
        port: 9000
        protocol: TCP
        targetPort: 9000
      type: ClusterIP
      