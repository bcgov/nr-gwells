apiVersion: template.openshift.io/v1
kind: Template
parameters:
  - name: REPO
    description: Repository name
    value: nr-gwells
  - name: COMPONENT
    description: Component name
    value: frontend
  - name: ZONE
    description: Deployment zone, e.g. pr-### or prod
    required: true
  - name: TAG
    required: true
objects:
  - kind: Service
    apiVersion: v1
    metadata:
      labels:
        app: ${REPO}-${ZONE}
      name: ${REPO}-${ZONE}-${COMPONENT}
    spec:
      type: ClusterIP
      ports:
        - port: 3005
          targetPort: 3000
          protocol: TCP
          name: 3000-tcp
      selector:
        service: ${REPO}-${ZONE}-${COMPONENT}
  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      labels:
        app: ${REPO}-${ZONE}
        deployment: ${REPO}-${ZONE}-${COMPONENT}
      name: ${REPO}-${ZONE}-${COMPONENT}
    spec:
      strategy:
        type: Recreate
      selector:
        matchLabels:
          deployment: ${REPO}-${ZONE}-${COMPONENT}
      template:
        metadata:
          labels:
            app: ${REPO}-${ZONE}
            deployment: ${REPO}-${ZONE}-${COMPONENT}
            service: ${REPO}-${ZONE}-${COMPONENT}
        spec:
          containers:
            - name: ${REPO}-${ZONE}-${COMPONENT}
              image: ghcr.io/bcgov/${REPO}/${COMPONENT}:${TAG}
              securityContext:
                capabilities:
                  add: ["NET_BIND_SERVICE"]
              imagePullPolicy: Always
              env:
                - name: LOG_LEVEL
                  value: info
                - name: VUE_APP_AXIOS_BASE_URL
                  value: http://${REPO}-${ZONE}-${COMPONENT}/gwells/api/v2/
                - name: BACKEND_URL
                  value: http://${REPO}-${ZONE}-${COMPONENT}
              ports:
                - name: container-port
                  containerPort: 3000
                  protocol: TCP
              # command: ["caddy", "run", "--config", "/etc/caddy/Caddyfile"]
              readinessProbe:
                httpGet:
                  path: /health
                  port: 3000
                  scheme: HTTP
                initialDelaySeconds: 5
                periodSeconds: 2
                timeoutSeconds: 2
                successThreshold: 1
                failureThreshold: 30
              livenessProbe:
                successThreshold: 1
                failureThreshold: 3
                httpGet:
                  path: /health
                  port: 3000
                  scheme: HTTP
                initialDelaySeconds: 15
                periodSeconds: 30
                timeoutSeconds: 5
              resources: # this is optional
                limits:
                  cpu: 30m
                  memory: 40Mi
                requests:
                  cpu: 15m
                  memory: 20Mi
  - kind: Route
    apiVersion: route.openshift.io/v1
    metadata:
      labels:
        app: ${REPO}-${ZONE}
      name: ${REPO}-${ZONE}-${COMPONENT}
    spec:
      host: ${REPO}-${ZONE}-${COMPONENT}.apps.silver.devops.gov.bc.ca
      port:
        targetPort: 3000-tcp
      to:
        kind: Service
        name: ${REPO}-${ZONE}-${COMPONENT}
        weight: 100
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
