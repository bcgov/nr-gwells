kind: Template
apiVersion: template.openshift.io/v1
parameters:
- name: NAME_SUFFIX
  displayName: Name Suffix
  description: A suffix appended to all objects
  required: true
- name: IMAGE_TAG
  required: true
- name: HOST
  required: false
  value: ''
- name: CPU_REQUEST
  required: false
  value: 25m
- name: CPU_LIMIT
  required: false
  value: 100m
- name: MEMORY_REQUEST
  required: false
  value: 150Mi
- name: MEMORY_LIMIT
  required: false
  value: 450Mi
- name: PSQL_IMAGE
  description: A psql client image (a PostgreSQL image will suffice)
  required: true
  value: image-registry.openshift-image-registry.svc:5000/26e83e-tools/crunchy-postgres-gis:centos7-12.4-3.0-4.5.0
- name: E_LICENSING_URL
  required: true
- name: DB_REPLICATE
  required: true
- name: DJANGO_DEBUG
  required: true
- name: ENABLE_ADDITIONAL_DOCUMENTS
  required: true
- name: S3_PRIVATE_BUCKET
  required: true
- name: S3_PRIVATE_HOST
  required: true
- name: S3_WELL_EXPORT_BUCKET
  required: true
- name: SSO_AUDIENCE
  required: true
- name: SSO_AUTH_HOST
  required: true
- name: SSO_CLIENT
  required: true
- name: SSO_IDP_HINT
  required: true
- name: SSO_PORT
  required: true
- name: SSO_PUBKEY
  required: true
- name: SSO_REALM
  required: true
- name: SSO_TEST_AUDIENCE
  required: true
- name: SSO_TEST_CLIENT
  required: true
- name: GDAL_LIBRARY_PATH
  required: true
- name: GEOS_LIBRARY_PATH
  required: true
- name: S3_AQUIFER_BUCKET
  required: true
- name: S3_REGISTRANT_BUCKET
  required: true
- name: S3_PRIVATE_ROOT_BUCKET
  required: true
- name: S3_PRIVATE_AQUIFER_BUCKET
  required: true
- name: S3_PRIVATE_REGISTRANT_BUCKET
  required: true
- name: S3_PRIVATE_WELL_BUCKET
  required: true
- name: ENABLE_AQUIFERS_SEARCH
  required: true
- name: EMAIL_NOTIFICATION_RECIPIENT
  required: true
- name: GEOCODER_ADDRESS_API_BASE
  required: true
objects:
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: gwells${NAME_SUFFIX}-backend
    creationTimestamp: 
    labels:
      base-name: gwells
      appver: gwells${NAME_SUFFIX}-backend
    annotations:
      description: Keeps track of changes in the application image
  spec:
    lookupPolicy:
      local: false
- kind: ConfigMap
  apiVersion: v1
  metadata:
    creationTimestamp: 
    name: gwells-global-config${NAME_SUFFIX}
    labels:
      appver: gwells${NAME_SUFFIX}
      app: gwells${NAME_SUFFIX}
  data:
    DB_REPLICATE: ${DB_REPLICATE}
    DJANGO_DEBUG: ${DJANGO_DEBUG}
    ENABLE_ADDITIONAL_DOCUMENTS: ${ENABLE_ADDITIONAL_DOCUMENTS}
    E_LICENSING_URL: ${E_LICENSING_URL}
    S3_PRIVATE_BUCKET: ${S3_PRIVATE_BUCKET}
    S3_PRIVATE_HOST: ${S3_PRIVATE_HOST}
    S3_WELL_EXPORT_BUCKET: ${S3_WELL_EXPORT_BUCKET}
    S3_AQUIFER_BUCKET: ${S3_AQUIFER_BUCKET}
    SSO_AUDIENCE: ${SSO_AUDIENCE}
    SSO_AUTH_HOST: ${SSO_AUTH_HOST}
    SSO_CLIENT: ${SSO_CLIENT}
    SSO_IDP_HINT: ${SSO_IDP_HINT}
    SSO_PORT: ${SSO_PORT}
    SSO_PUBKEY: ${SSO_PUBKEY}
    SSO_REALM: ${SSO_REALM}
    SSO_TEST_AUDIENCE: ${SSO_TEST_AUDIENCE}
    SSO_TEST_CLIENT: ${SSO_TEST_CLIENT}
    GDAL_LIBRARY_PATH: ${GDAL_LIBRARY_PATH}
    GEOS_LIBRARY_PATH: ${GEOS_LIBRARY_PATH}
    S3_REGISTRANT_BUCKET: ${S3_REGISTRANT_BUCKET}
    S3_PRIVATE_ROOT_BUCKET: ${S3_PRIVATE_ROOT_BUCKET}
    S3_PRIVATE_AQUIFER_BUCKET: ${S3_PRIVATE_AQUIFER_BUCKET}
    S3_PRIVATE_REGISTRANT_BUCKET: ${S3_PRIVATE_REGISTRANT_BUCKET}
    S3_PRIVATE_WELL_BUCKET: ${S3_PRIVATE_WELL_BUCKET}
    ENABLE_AQUIFERS_SEARCH: ${ENABLE_AQUIFERS_SEARCH}
    EMAIL_NOTIFICATION_RECIPIENT: ${EMAIL_NOTIFICATION_RECIPIENT}
    GEOCODER_ADDRESS_API_BASE: ${GEOCODER_ADDRESS_API_BASE}
- kind: Deployment
  apiVersion: apps/v1
  metadata:
    name: gwells${NAME_SUFFIX}-backend
    creationTimestamp: 
    labels:
      appver: gwells${NAME_SUFFIX}-backend
    annotations:
      description: Defines how to deploy the application server
  spec:
    strategy:
      type: RollingUpdate
      rollingParams:
        timeoutSeconds: 900
        # pre:
        #   failurePolicy: Abort
        #   execNewPod:
        #     command:
        #     - "/usr/bin/container-entrypoint"
        #     - "/opt/app-root/src/scripts/pre-deploy.sh"
        #     containerName: gwells-app${NAME_SUFFIX}-backend
        #     env:
        #     - name: PGDATABASE
        #       valueFrom:
        #         secretKeyRef:
        #           name: gwells-pg12${NAME_SUFFIX}-backend
        #           key: database-name
        #     - name: PGUSER
        #       valueFrom:
        #         secretKeyRef:
        #           name: gwells-pg12${NAME_SUFFIX}-backend
        #           key: database-user
        #     - name: PGPASSWORD
        #       valueFrom:
        #         secretKeyRef:
        #           name: gwells-pg12${NAME_SUFFIX}-backend
        #           key: database-password
        #     - name: PGHOST
        #       value: gwells-pg12${NAME_SUFFIX}-backend
      resources: {}
      activeDeadlineSeconds: 21600
    replicas: 1
    test: false
    selector:
      name: gwells${NAME_SUFFIX}-backend
      matchLabels:
        deployment: gwells${NAME_SUFFIX}-backend
    template:
      metadata:
        name: gwells${NAME_SUFFIX}-backend
        creationTimestamp: 
        labels:
          name: gwells${NAME_SUFFIX}-backend
          appver: gwells${NAME_SUFFIX}-backend
          deployment: gwells${NAME_SUFFIX}-backend
      spec:
        volumes:
          - name: staticfiles
            emptyDir:
              sizeLimit: 250Mi
        containers:
        - name: gwells-app${NAME_SUFFIX}-backend
          image: 'ghcr.io/bcgov/nr-gwells/backend:${IMAGE_TAG}'
          volumeMounts:
            - name: staticfiles
              mountPath: /app/staticfiles
          ports:
          - containerPort: 8080
            protocol: TCP
          env:
          - name: DATABASE_SERVICE_NAME
            value: gwells${NAME_SUFFIX}-database
          - name: DATABASE_NAME
            valueFrom:
              secretKeyRef:
                name: gwells${NAME_SUFFIX}-database
                key: database-name
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                name: gwells${NAME_SUFFIX}-database
                key: database-user
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: gwells${NAME_SUFFIX}-database
                key: database-password
          - name: DATABASE_SCHEMA
            value: public
          - name: APP_MODULE
            value: wsgi:application
          - name: APP_HOME
            value: backend
          - name: APP_CONFIG
            value: "/opt/app-root/src/backend/gunicorn.ocp4.cfg"
          - name: DJANGO_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: gwells-django${NAME_SUFFIX}
                key: secret_key
          - name: DJANGO_ADMIN_URL
            valueFrom:
              secretKeyRef:
                name: gwells-django${NAME_SUFFIX}
                key: admin_url
          - name: DJANGO_ADMIN_USER
            valueFrom:
              secretKeyRef:
                name: gwells-django${NAME_SUFFIX}
                key: admin_user
          - name: DJANGO_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: gwells-django${NAME_SUFFIX}
                key: admin_password
          - name: E_LICENSING_AUTH_PASSWORD
            valueFrom:
              secretKeyRef:
                name: gwells-e-licensing${NAME_SUFFIX}
                key: E_LICENSING_AUTH_PASSWORD
          - name: E_LICENSING_AUTH_USERNAME
            valueFrom:
              secretKeyRef:
                name: gwells-e-licensing${NAME_SUFFIX}
                key: E_LICENSING_AUTH_USERNAME
          - name: E_LICENSING_URL
            valueFrom:
              configMapKeyRef:
                name: gwells-global-config${NAME_SUFFIX}
                key: E_LICENSING_URL
          - name: DJANGO_DEBUG
            valueFrom:
              configMapKeyRef:
                key: DJANGO_DEBUG
                name: gwells-global-config${NAME_SUFFIX}
          - name: GDAL_LIBRARY_PATH
            valueFrom:
              configMapKeyRef:
                key: GDAL_LIBRARY_PATH
                name: gwells-global-config${NAME_SUFFIX}
          - name: GEOS_LIBRARY_PATH
            valueFrom:
              configMapKeyRef:
                key: GEOS_LIBRARY_PATH
                name: gwells-global-config${NAME_SUFFIX}
          - name: S3_AQUIFER_BUCKET
            valueFrom:
              configMapKeyRef:
                key: S3_AQUIFER_BUCKET
                name: gwells-global-config${NAME_SUFFIX}
          - name: S3_REGISTRANT_BUCKET
            valueFrom:
              configMapKeyRef:
                key: S3_REGISTRANT_BUCKET
                name: gwells-global-config${NAME_SUFFIX}
          - name: S3_PRIVATE_ROOT_BUCKET
            valueFrom:
              configMapKeyRef:
                key: S3_PRIVATE_ROOT_BUCKET
                name: gwells-global-config${NAME_SUFFIX}
          - name: S3_PRIVATE_AQUIFER_BUCKET
            valueFrom:
              configMapKeyRef:
                key: S3_PRIVATE_AQUIFER_BUCKET
                name: gwells-global-config${NAME_SUFFIX}
          - name: S3_PRIVATE_REGISTRANT_BUCKET
            valueFrom:
              configMapKeyRef:
                key: S3_PRIVATE_REGISTRANT_BUCKET
                name: gwells-global-config${NAME_SUFFIX}
          - name: S3_PRIVATE_WELL_BUCKET
            valueFrom:
              configMapKeyRef:
                key: S3_PRIVATE_WELL_BUCKET
                name: gwells-global-config${NAME_SUFFIX}
          - name: SSO_CLIENT
            valueFrom:
              configMapKeyRef:
                key: SSO_CLIENT
                name: gwells-global-config${NAME_SUFFIX}
          - name: SSO_PUBKEY
            valueFrom:
              configMapKeyRef:
                key: SSO_PUBKEY
                name: gwells-global-config${NAME_SUFFIX}
          - name: SSO_AUTH_HOST
            valueFrom:
              configMapKeyRef:
                key: SSO_AUTH_HOST
                name: gwells-global-config${NAME_SUFFIX}
          - name: SSO_AUDIENCE
            valueFrom:
              configMapKeyRef:
                key: SSO_AUDIENCE
                name: gwells-global-config${NAME_SUFFIX}
          - name: SSO_REALM
            valueFrom:
              configMapKeyRef:
                key: SSO_REALM
                name: gwells-global-config${NAME_SUFFIX}
          - name: SSO_PORT
            valueFrom:
              configMapKeyRef:
                key: SSO_PORT
                name: gwells-global-config${NAME_SUFFIX}
          - name: SSO_TEST_CLIENT
            valueFrom:
              configMapKeyRef:
                key: SSO_TEST_CLIENT
                name: gwells-global-config${NAME_SUFFIX}
          - name: SSO_TEST_AUDIENCE
            valueFrom:
              configMapKeyRef:
                key: SSO_TEST_AUDIENCE
                name: gwells-global-config${NAME_SUFFIX}
          - name: ENABLE_ADDITIONAL_DOCUMENTS
            valueFrom:
              configMapKeyRef:
                key: ENABLE_ADDITIONAL_DOCUMENTS
                name: gwells-global-config${NAME_SUFFIX}
          - name: ENABLE_AQUIFERS_SEARCH
            valueFrom:
              configMapKeyRef:
                key: ENABLE_AQUIFERS_SEARCH
                name: gwells-global-config${NAME_SUFFIX}
          - name: APP_CONTEXT_ROOT
            value: gwells
          - name: SESSION_COOKIE_SECURE
            value: 'True'
          - name: CSRF_COOKIE_SECURE
            value: 'True'
          - name: DB_REPLICATE
            valueFrom:
              configMapKeyRef:
                key: DB_REPLICATE
                name: gwells-global-config${NAME_SUFFIX}
          # - name: MINIO_ACCESS_KEY
          #   valueFrom:
          #     secretKeyRef:
          #       name: minio-access-parameters${NAME_SUFFIX}
          #       key: MINIO_ACCESS_KEY
          # - name: MINIO_SECRET_KEY
          #   valueFrom:
          #     secretKeyRef:
          #       name: minio-access-parameters${NAME_SUFFIX}
          #       key: MINIO_SECRET_KEY
          # - name: S3_PUBLIC_ACCESS_KEY
          #   valueFrom:
          #     secretKeyRef:
          #       name: minio-access-parameters${NAME_SUFFIX}
          #       key: S3_PUBLIC_ACCESS_KEY
          # - name: S3_PUBLIC_SECRET_KEY
          #   valueFrom:
          #     secretKeyRef:
          #       name: minio-access-parameters${NAME_SUFFIX}
          #       key: S3_PUBLIC_SECRET_KEY
          # - name: S3_HOST
          #   valueFrom:
          #     secretKeyRef:
          #       name: minio-access-parameters${NAME_SUFFIX}
          #       key: S3_HOST
          # - name: S3_ROOT_BUCKET
          #   valueFrom:
          #     secretKeyRef:
          #       name: minio-access-parameters${NAME_SUFFIX}
          #       key: S3_ROOT_BUCKET
          - name: S3_PRIVATE_HOST
            valueFrom:
              configMapKeyRef:
                key: S3_PRIVATE_HOST
                name: gwells-global-config${NAME_SUFFIX}
          - name: S3_WELL_EXPORT_BUCKET
            valueFrom:
              configMapKeyRef:
                key: S3_WELL_EXPORT_BUCKET
                name: gwells-global-config${NAME_SUFFIX}
          - name: S3_PRIVATE_BUCKET
            valueFrom:
              configMapKeyRef:
                key: S3_PRIVATE_BUCKET
                name: gwells-global-config${NAME_SUFFIX}
          - name: SSO_IDP_HINT
            valueFrom:
              configMapKeyRef:
                key: SSO_IDP_HINT
                name: gwells-global-config${NAME_SUFFIX}
          - name: WEB_CONCURRENCY
            value: '4'
          - name: GUNICORN_WORKERS
            value: '4'
          - name: ENFORCE_ENV_VARIABLES
            value: 'False'
          - name: EMAIL_NOTIFICATION_RECIPIENT
            valueFrom:
              configMapKeyRef:
                key: EMAIL_NOTIFICATION_RECIPIENT
                name: gwells-global-config${NAME_SUFFIX}
          - name: GEOCODER_ADDRESS_API_BASE
            valueFrom:
              configMapKeyRef:
                key: GEOCODER_ADDRESS_API_BASE
                name: gwells-global-config${NAME_SUFFIX}
          resources:
            limits:
              cpu: "${CPU_LIMIT}"
              memory: "${MEMORY_LIMIT}"
            requests:
              cpu: "${CPU_REQUEST}"
              memory: "${MEMORY_REQUEST}"
          # readinessProbe:
          #   httpGet:
          #     path: /gwells/health
          #     port: 8080
          #     scheme: HTTP
          #   initialDelaySeconds: 20
          #   timeoutSeconds: 3
          #   periodSeconds: 5
          #   successThreshold: 1
          #   failureThreshold: 5
          # livenessProbe:
          #   httpGet:
          #     path: /gwells/health
          #     port: 8080
          #     scheme: HTTP
          #   initialDelaySeconds: 20
          #   timeoutSeconds: 3
          #   periodSeconds: 30
          #   successThreshold: 1
          #   failureThreshold: 5
          terminationMessagePath: "/dev/termination-log"
          terminationMessagePolicy: File
          imagePullPolicy: Always
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: {}
        schedulerName: default-scheduler
- apiVersion: autoscaling/v1
  kind: HorizontalPodAutoscaler
  metadata:
    creationTimestamp: 
    labels:
      appver: gwells${NAME_SUFFIX}-backend
    name: gwells${NAME_SUFFIX}-backend
  spec:
    maxReplicas: 5
    minReplicas: 1
    scaleTargetRef:
      apiVersion: v1
      kind: Deployment
      name: gwells${NAME_SUFFIX}-backend
    targetCPUUtilizationPercentage: 90
- kind: Service
  apiVersion: v1
  metadata:
    name: gwells${NAME_SUFFIX}-backend
    creationTimestamp: 
    labels:
      appver: gwells${NAME_SUFFIX}-backend
    annotations:
      description: Exposes and load balances the application pods
  spec:
    ports:
    - name: web
      protocol: TCP
      port: 8000
      targetPort: 8000
    selector:
      name: gwells${NAME_SUFFIX}-backend
    type: ClusterIP
    sessionAffinity: None
- kind: Route
  apiVersion: v1
  metadata:
    name: gwells${NAME_SUFFIX}-backend
    creationTimestamp: 
    labels:
      frontend: 'true'
      appver: gwells${NAME_SUFFIX}-backend
    annotations: {}
  spec:
    host: "${HOST}"
    path: "/gwells"
    to:
      kind: Service
      name: gwells${NAME_SUFFIX}-backend
      weight: 100
    port:
      targetPort: web
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    wildcardPolicy: None
